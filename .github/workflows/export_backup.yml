name: Daily CSV Backup

on:
  schedule:
    # 毎日 0:00 UTC（= 日本時間 9:00）
    - cron: "0 0 * * *"
  workflow_dispatch:

permissions:
  actions: read
  contents: write        # 自動コミット
  issues: write          # 失敗時のIssue起票

jobs:
  backup:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Compute date (UTC)
        id: date
        run: echo "today=$(date -u +'%Y%m%d')" >> "$GITHUB_OUTPUT"

      - name: Download /notes/export.csv
        id: dl
        env:
          EXPORT_KEY: ${{ secrets.EXPORT_KEY }}
          RENDER_URL: ${{ vars.RENDER_URL }}
        run: |
          set -e
          mkdir -p backups/tmp

          # ダウンロード（HTTPエラー時失敗、リダイレクト追従、静かなログ）
          curl -fLss \
            -H "Authorization: Bearer ${EXPORT_KEY}" \
            "${RENDER_URL}/notes/export.csv?limit=10000" \
            -o backups/tmp/export.csv

          # サイズ確認（0バイトでないこと）
          sz=$(wc -c < backups/tmp/export.csv || echo 0)
          echo "size=${sz}" >> "$GITHUB_OUTPUT"
          if [ "${sz}" -le 0 ]; then
            echo "Downloaded CSV is empty." >&2
            exit 1
          fi

          # レコード数はCSVパーサで数える（改行入りフィールドに強い）
          # 先頭1行はヘッダなので-1する
          rows=$(python3 - << 'PY'
import csv, sys
with open("backups/tmp/export.csv", "r", encoding="utf-8", newline="") as f:
    r = csv.reader(f)
    n = sum(1 for _ in r)
print(max(0, n-1))
PY
)
          echo "Downloaded rows (records): ${rows}"
          echo "rows=${rows}" >> "$GITHUB_OUTPUT"

          # 保存ファイル名
          dest="backups/notes_${{ steps.date.outputs.today }}.csv"
          mkdir -p backups
          mv -f backups/tmp/export.csv "${dest}"
          echo "dest=${dest}" >> "$GITHUB_OUTPUT"

      - name: Commit CSV to repo
        if: ${{ success() }}
        run: |
          git config user.name  "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add "${{ steps.dl.outputs.dest }}"
          git commit -m "chore(backup): ${{ steps.dl.outputs.dest }} (size=${{ steps.dl.outputs.size }}, rows=${{ steps.dl.outputs.rows }})" || echo "Nothing to commit"
          git push

      - name: Open issue if backup failed
        if: ${{ failure() }}
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const title = "CSV backup failed";
            const body = `Daily backup failed on ${new Date().toISOString()}.
            Please check the Actions log for details.`;
            await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title, body
            })
