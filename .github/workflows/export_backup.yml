name: Daily CSV Backup

on:
  schedule:
    # 毎日 0:00 UTC（= 日本時間 9:00）に実行
    - cron: "0 0 * * *"
  workflow_dispatch:

permissions:
  actions: read
  contents: write   # 自動コミット用
  issues: write     # 失敗時のIssue起票用

jobs:
  backup:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Compute date (UTC)
        id: date
        run: echo "today=$(date -u +%Y%m%d)" >> "$GITHUB_OUTPUT"

      - name: Download /export.csv
        id: dl
        env:
          EXPORT_KEY: ${{ secrets.EXPORT_KEY }}
          RENDER_URL: ${{ vars.RENDER_URL }}
        run: |
          set -e
          mkdir -p backups/tmp
          # HTTPエラー時は失敗 (-f)、リダイレクト追従 (-L)、静かなログ (-sS)
          curl -fLsS \
            -H "Authorization: Bearer ${EXPORT_KEY}" \
            "${RENDER_URL}/export.csv" \
            -o backups/tmp/export.csv

          # サイズ検証（0バイトは失敗扱い）
          sz=$(wc -c < backups/tmp/export.csv || echo 0)
          echo "size=$sz" >> "$GITHUB_OUTPUT"
          if [ "$sz" -le 0 ]; then
            echo "Downloaded CSV is empty." >&2
            exit 1
          fi

          # 保存ファイル名にUTC日付を付与
          dest="backups/notes_${{ steps.date.outputs.today }}.csv"
          mkdir -p backups
          mv -f backups/tmp/export.csv "$dest"
          echo "dest=$dest" >> "$GITHUB_OUTPUT"

      - name: Commit CSV to repo
        # ダウンロード成功時のみコミット
        if: ${{ success() }}
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add "${{ steps.dl.outputs.dest }}"
          git commit -m "chore(backup): notes_${{ steps.date.outputs.today }}.csv" || echo "No changes to commit."
          git push

      - name: Open issue if backup failed
        if: ${{ failure() }}
        uses: actions/github-script@v7
        with:
          script: |
            const {owner, repo} = context.repo
            const title = "CSV backup failed"
            const body = [
              "Daily CSV backup failed.",
              `Workflow run: ${context.serverUrl}/${owner}/${repo}/actions/runs/${context.runId}`
            ].join("\n")
            // 既存の未クローズIssueがあれば重複起票しない
            const { data: issues } = await github.rest.issues.listForRepo({
              owner, repo, state: "open", labels: "backup"
            })
            if (!issues.some(i => i.title === title)) {
              await github.rest.issues.create({
                owner, repo, title, body, labels: ["backup"]
              })
            }
